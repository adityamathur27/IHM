{"ast":null,"code":"var _jsxFileName = \"D:\\\\IHM Sumerpur\\\\IHM\\\\frontend\\\\src\\\\components\\\\GalleryCarousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./GalleryCarousel.css\";\n\n// Auto-import all images from folder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction importAll(r) {\n  return r.keys().map(r);\n}\nconst images = importAll(require.context(\"../assets/images/photo galary\", false, /\\.(png|jpe?g|svg)$/));\nexport default function Gallery() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lightboxOpen, setLightboxOpen] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const imagesPerPage = 4;\n  const totalPages = Math.ceil(images.length / imagesPerPage);\n\n  // Auto-change page every 3 seconds\n  useEffect(() => {\n    if (!lightboxOpen) {\n      const timer = setInterval(() => {\n        setCurrentPage(prev => prev % totalPages + 1);\n      }, 3000);\n      return () => clearInterval(timer);\n    }\n  }, [lightboxOpen, totalPages]);\n\n  // Lightbox functions\n  const openLightbox = index => {\n    setCurrentIndex(index);\n    setLightboxOpen(true);\n  };\n  const closeLightbox = () => setLightboxOpen(false);\n  const showNext = () => setCurrentIndex(prev => (prev + 1) % images.length);\n  const showPrev = () => setCurrentIndex(prev => (prev - 1 + images.length) % images.length);\n\n  // Paginated images\n  const startIndex = (currentPage - 1) * imagesPerPage;\n  const currentImages = images.slice(startIndex, startIndex + imagesPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-grid\",\n      children: currentImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: `Gallery ${startIndex + index}`,\n        className: \"gallery-thumb\",\n        onClick: () => openLightbox(startIndex + index)\n      }, startIndex + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `page-number ${i + 1 === currentPage ? \"active\" : \"\"}`,\n        onClick: () => setCurrentPage(i + 1),\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), lightboxOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lightbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: closeLightbox,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev\",\n        onClick: showPrev,\n        children: \"\\u276E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[currentIndex],\n        alt: \"Full View\",\n        className: \"lightbox-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: showNext,\n        children: \"\\u276F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Gallery, \"C1T9uQw1QS5ZyFPwXh6vp6dy+PA=\");\n_c = Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","importAll","r","keys","map","images","require","context","Gallery","_s","currentPage","setCurrentPage","lightboxOpen","setLightboxOpen","currentIndex","setCurrentIndex","imagesPerPage","totalPages","Math","ceil","length","timer","setInterval","prev","clearInterval","openLightbox","index","closeLightbox","showNext","showPrev","startIndex","currentImages","slice","className","children","img","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","i","_c","$RefreshReg$"],"sources":["D:/IHM Sumerpur/IHM/frontend/src/components/GalleryCarousel.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./GalleryCarousel.css\";\r\n\r\n// Auto-import all images from folder\r\nfunction importAll(r) {\r\n  return r.keys().map(r);\r\n}\r\nconst images = importAll(require.context(\"../assets/images/photo galary\", false, /\\.(png|jpe?g|svg)$/));\r\n\r\nexport default function Gallery() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [lightboxOpen, setLightboxOpen] = useState(false);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const imagesPerPage = 4;\r\n  const totalPages = Math.ceil(images.length / imagesPerPage);\r\n\r\n  // Auto-change page every 3 seconds\r\n  useEffect(() => {\r\n    if (!lightboxOpen) {\r\n      const timer = setInterval(() => {\r\n        setCurrentPage((prev) => (prev % totalPages) + 1);\r\n      }, 3000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [lightboxOpen, totalPages]);\r\n\r\n  // Lightbox functions\r\n  const openLightbox = (index) => {\r\n    setCurrentIndex(index);\r\n    setLightboxOpen(true);\r\n  };\r\n  const closeLightbox = () => setLightboxOpen(false);\r\n  const showNext = () => setCurrentIndex((prev) => (prev + 1) % images.length);\r\n  const showPrev = () => setCurrentIndex((prev) => (prev - 1 + images.length) % images.length);\r\n\r\n  // Paginated images\r\n  const startIndex = (currentPage - 1) * imagesPerPage;\r\n  const currentImages = images.slice(startIndex, startIndex + imagesPerPage);\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      {/* Image Grid */}\r\n      <div className=\"gallery-grid\">\r\n        {currentImages.map((img, index) => (\r\n          <img\r\n            key={startIndex + index}\r\n            src={img}\r\n            alt={`Gallery ${startIndex + index}`}\r\n            className=\"gallery-thumb\"\r\n            onClick={() => openLightbox(startIndex + index)}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: totalPages }, (_, i) => (\r\n          <span\r\n            key={i}\r\n            className={`page-number ${i + 1 === currentPage ? \"active\" : \"\"}`}\r\n            onClick={() => setCurrentPage(i + 1)}\r\n          >\r\n            {i + 1}\r\n          </span>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Lightbox */}\r\n      {lightboxOpen && (\r\n        <div className=\"lightbox\">\r\n          <span className=\"close\" onClick={closeLightbox}>\r\n            &times;\r\n          </span>\r\n          <button className=\"prev\" onClick={showPrev}>\r\n            &#10094;\r\n          </button>\r\n          <img src={images[currentIndex]} alt=\"Full View\" className=\"lightbox-img\" />\r\n          <button className=\"next\" onClick={showNext}>\r\n            &#10095;\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}